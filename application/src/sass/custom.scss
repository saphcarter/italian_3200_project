// Custom.scss
// Option B: Include parts of Bootstrap

// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import "../node_modules/bootstrap/scss/functions";

// 2. Include any default variable overrides here

// 3. Include remainder of required Bootstrap stylesheets (including any separate color mode stylesheets)
@import "../node_modules/bootstrap/scss/variables";
@import "../node_modules/bootstrap/scss/variables-dark";

// 4. Include any default map overrides here
$theme-colors: (
  "primary": #0a998f,
  "secondary": #078183,
  "success": #1f962e,
  "info": #ffaa00,
  "warning": #ffaa00,
  "danger": #e22d36,
);

$theme-colors: map-remove($theme-colors, "secondary");

$custom-colors: (
  "grey-darkest": #333333,
  "grey-dark": #999999,
  "grey-light": #cccccc,
  "grey-lightest": #e5e5e5,
  "primary-800": #013449,
  "primary-700": #034758,
  "primary-600": #078183,
  "primary-400": #39c1ac,
  "primary-300": #62e0c0,
  "primary-200": #99f4d5,
  "primary-100": #cbf9e5,
);

$theme-colors: map-merge($theme-colors, $custom-colors);

$spacer: 1rem !default;
$spacers: () !default;
$custom-spacers: (
  6: $spacer * 4,
  7: $spacer * 5,
  8: $spacer * 6,
  9: $spacer * 7,
  10: $spacer * 8,
  12: $spacer * 9,
  15: $spacer * 10,
);

$spacers: map-merge($spacers, $custom-spacers);

// 5. Include remainder of required parts
@import "../node_modules/bootstrap/scss/maps";
@import "../node_modules/bootstrap/scss/mixins";

@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @if $color == "light" {
      @include button-variant(
        $value,
        $value,
        $hover-background: shade-color($value, $btn-hover-bg-shade-amount),
        $hover-border: shade-color($value, $btn-hover-border-shade-amount),
        $active-background: shade-color($value, $btn-active-bg-shade-amount),
        $active-border: shade-color($value, $btn-active-border-shade-amount)
      );
    } @else if $color == "dark" {
      @include button-variant(
        $value,
        $value,
        $hover-background: tint-color($value, $btn-hover-bg-tint-amount),
        $hover-border: tint-color($value, $btn-hover-border-tint-amount),
        $active-background: tint-color($value, $btn-active-bg-tint-amount),
        $active-border: tint-color($value, $btn-active-border-tint-amount)
      );
    } @else {
      @include button-variant($value, $value);
      color: #fff;
    }
  }
}

@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
    @include button-outline-variant($value);
  }
}

@import "../node_modules/bootstrap/scss/root";

// // 6. Optionally include any other parts as needed
// @import "../node_modules/bootstrap/scss/utilities";
// @import "../node_modules/bootstrap/scss/reboot";
// @import "../node_modules/bootstrap/scss/type";
// @import "../node_modules/bootstrap/scss/images";
// @import "../node_modules/bootstrap/scss/containers";
// @import "../node_modules/bootstrap/scss/grid";
// @import "../node_modules/bootstrap/scss/helpers";

// 7. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss`
// @import "../node_modules/bootstrap/scss/utilities/api";

// 8. Add additional custom code here
// Import all of Bootstrap's CSS
